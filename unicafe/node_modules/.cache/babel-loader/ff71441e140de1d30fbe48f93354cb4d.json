{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ericamelodecarvalho/Projects/fso/part1/unicafe/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: props.handleClick,\n  children: props.text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 27\n}, this);\n\n_c = Button;\n\nconst Statistic = ({\n  text,\n  stat\n}) => /*#__PURE__*/_jsxDEV(\"p\", {\n  children: text + \" \" + stat\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n\n_c2 = Statistic;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const all = good + neutral + bad;\n  const average = (good - bad) / all;\n  const positive = good / all;\n\n  if (all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"good\",\n        stat: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"neutral\",\n        stat: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"bad\",\n        stat: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"all\",\n        stat: all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"average\",\n        stat: average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"positive\",\n        stat: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/ericamelodecarvalho/Projects/fso/part1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","handleClick","text","Statistic","stat","Statistics","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Button = (props) => <button onClick={props.handleClick}>{props.text}</button>\n\nconst Statistic = ({text, stat}) => (\n  <p>{text + \" \" + stat}</p>\n)\n\nconst Statistics = ({good, neutral, bad}) => {\n  const all = good + neutral + bad\n  const average = (good - bad) / all\n  const positive = good / all\n\n  if (all === 0 ) {\n    return <p>No feedback given</p>\n  } else {\n    return (\n      <>\n        <h2>Statistics</h2>\n        <Statistic text=\"good\" stat={good} />\n        <Statistic text=\"neutral\" stat={neutral} />\n        <Statistic text=\"bad\" stat={bad} />\n        <Statistic text=\"all\" stat={all} />\n        <Statistic text=\"average\" stat={average} />\n        <Statistic text=\"positive\" stat={positive} />\n      </>\n    )\n  }\n}\n\nconst App = () => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <>\n      <h1>Give feedback</h1>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}